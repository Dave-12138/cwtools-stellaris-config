
types = {
	type[federation_law_category] = {
		path = "game/common/federation_law_categories"
		file_extension = .txt
		localisation = {
			## required
			Name = "$"
			## required
			Description = "$_desc"
		}
	}
	type[federation_law] = {
		path = "game/common/federation_laws"
		file_extension = .txt
		localisation = {
			## required
			Name = "$"
			## required
			Description = "$_desc"
		}
	}
	type[federation_perk] = {
		path = "game/common/federation_perks"
		file_extension = .txt
		localisation = {
			## required
			Name = "$"
			## required
			Description = "$_desc"
		}
		images = {
			## primary
			## optional
			icon = "gfx/interface/icons/federation/federation_perks/$.dds" # inferred
		}
	}
	type[federation_type] = {
		path = "game/common/federation_types"
		file_extension = .txt
		localisation = {
			## required
			Name = "$"
			## required
			Description = "$_desc"
		}
		images = {
			## primary
			icon = "#icon" # <sprite>
		}
	}
}

federation_law_category = {
	## cardinality = 0..1
	show_succession_date = yes
	## cardinality = 0..1
	centralization = yes
	laws = {
		## cardinality = 1..inf
		<federation_law>
	}
	## cardinality = 0..1
	## replace_scopes = { this = federation root = federation }
	potential = single_alias_right[trigger_clause]
}

federation_law = {
	## cardinality = 0..1
	unlocks_centralization = int
	## cardinality = 0..1
	cohesion_growth = float
	## cardinality = 0..1
	required_centralization = {
		base = int
	}
	## cardinality = 0..1
	display_level = int
	## replace_scopes = { this = federation root = federation }
	allow = single_alias_right[trigger_clause]
	## cardinality = 0..1
	## replace_scopes = { this = federation root = federation }
	potential = single_alias_right[trigger_clause]
	## cardinality = 0..1
	## replace_scopes = { this = federation root = federation }
	modifier = {
		## cardinality = 0..1
		description = localisation
		alias_name[modifier] = alias_match_left[modifier]
	}
	## cardinality = 0..1
	## replace_scopes = { this = federation root = federation }
	on_enact = single_alias_right[effect_clause]
	## replace_scopes = { this = country root = country }
	ai_weight = {
		alias_name[modifier_rule_with_loc] = alias_match_left[modifier_rule_with_loc]
	}
}

federation_perk = {
	## cardinality = 0..1
	custom_tooltip = localisation
	## cardinality = 0..1
	## replace_scopes = { this = federation root = federation }
	potential = single_alias_right[trigger_clause]
	## cardinality = 0..1
	## replace_scopes = { this = country root = country }
	members_modifier = single_alias_right[modifier_clause]
	## cardinality = 0..1
	## replace_scopes = { this = country root = country }
	leader_modifier = single_alias_right[modifier_clause]
	## cardinality = 0..inf
	## replace_scopes = { this = country root = country }
	member_triggered_modifier = single_alias_right[triggered_modifier_clause]
	## cardinality = 0..inf
	## replace_scopes = { this = country root = country }
	leader_triggered_modifier = single_alias_right[triggered_modifier_clause]
	## cardinality = 0..1
	## replace_scopes = { this = country root = country }
	envoy_modifier = {
		## cardinality = 0..1
		description = localisation
		alias_name[modifier] = alias_match_left[modifier]
	}
	## cardinality = 0..1
	## replace_scopes = { this = federation root = federation }
	federation_modifier = {
		## cardinality = 0..1
		description = localisation
		alias_name[modifier] = alias_match_left[modifier]
	}
	## cardinality = 0..1
	## replace_scopes = { this = federation root = federation }
	on_activate = single_alias_right[effect_clause]
	## cardinality = 0..1
	## replace_scopes = { this = federation root = federation }
	on_deactivate = single_alias_right[effect_clause]
}

federation_type = {
	icon = <sprite>
	base_intel = int
	## cardinality = 0..1
	ownership_limits = <country_ownership_limit>
	## cardinality = 0..1
	## replace_scopes = { this = country root = country }
	valid_leader = single_alias_right[trigger_clause]
	## replace_scopes = { this = country root = country from = country }
	potential = single_alias_right[trigger_clause]
	## cardinality = 0..1
	## replace_scopes = { this = country root = country from = country }
	allow = single_alias_right[trigger_clause]
	levels = {
		## cardinality = 1..inf
		localisation = {
			## cardinality = 0..1
			experience = int
			perks = {
				## cardinality = 0..inf
				<federation_perk>
			}
		}
	}
	## replace_scopes = { this = federation root = federation }
	on_create = single_alias_right[effect_clause]

	## replace_scopes = { this = country root = country from = country }
	ai_weight = {
		alias_name[modifier_rule_with_loc] = alias_match_left[modifier_rule_with_loc]
	}
}