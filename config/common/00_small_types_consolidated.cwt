
#I got frustrated at there being SO MANY files, so I have thrown a whole lot together in here -Caligula

types = {
#	type[country_color] = { #commented out as it threw errors anyway
#		path = "game/common/colors"
#		## type_key_filter = country
#		subtype[default] = {}
#		## type_key_filter = fallen_empire
#		subtype[fallen_empire] = {}
#		## type_key_filter = faction
#		subtype[faction] = {}
#		## type_key_filter = pirate
#		subtype[pirate] = {}
#		## type_key_filter = species
#		subtype[species] = {}
#	}
	type[system_type] = {
		path = "game/common/system_types"
		localisation = {
			## required
			name = "$"
		}
	}
	## type_key_filter = part
	type[start_screen_message] = {
		path = "game/common/start_screen_messages"
		name_field = localization
	}
	type[trade_conversion] = {
		path = "game/common/trade_conversions"
	}
	type[scripted_modifier] = {
		path = "game/common/scripted_modifiers"
		localisation = {
			## required
			name = "mod_$"
		}
		images = {
			## primary
			icon = "#icon" # icon[gfx/interface/icons/modifiers]
			## primary
			icon = "gfx/interface/icons/modifiers/mod_$.dds" # inferred
		}
	}
}

#country_color = { #commented out as it threw errors on every line anyway
#	subtype[default] = {
#		##cardinality = 0..inf
#		colour[rgb]
#		##cardinality = 0..inf
#		colour[hsv]
#	}
#	subtype[fallen_empire] = {
#		##cardinality = 0..inf
#		colour[rgb]
#		##cardinality = 0..inf
#		colour[hsv]
#	}
#	subtype[faction] = {
#		##cardinality = 0..inf
#		colour[rgb]
#		##cardinality = 0..inf
#		colour[hsv]
#	}
#	subtype[pirate] = {
#		##cardinality = 0..inf
#		colour[rgb]
#		##cardinality = 0..inf
#		colour[hsv]
#	}
#	subtype[species] = {
#		##cardinality = 0..inf
#		colour[rgb]
#		##cardinality = 0..inf
#		colour[hsv]
#	}
#}

system_type = {
	## replace_scope = { this = system root = system }
	#TODO: it appears so, but the file uses owner (not space_owner). Check pls
	potential = {
		alias_name[trigger] = alias_match_left[trigger]
	}

	## replace_scope = { this = system root = system }
	#TODO: it appears so, but the file uses owner (not space_owner). Check pls
	## cardinality = 0..1
	weight_modifier = {
		alias_name[modifier_rule] = alias_match_left[modifier_rule]
	}
}

start_screen_message = {
	location = int
	localization = localisation

	## replace_scope = { root = country this = country }
	trigger = {
		alias_name[trigger] = alias_match_left[trigger]
	}
}

enums = {
	enum[hardcoded_map_mode_tooltip] = {
		opinion
		country
		intel
	}
	enum[hardcoded_map_mode_filters] = {
		exploration
		expansion
		exploitation
		details
		unions
		players
		sectors
		trade_routes
	}
}

trade_conversion = {
	## replace_scope = { this = country from = country }
	potential = {
		alias_name[trigger] = alias_match_left[trigger]
	}
	weight = {
		alias_name[modifier_rule] = alias_match_left[modifier_rule]
	}
	conversion_rate = {
		## cardinality = 1..inf
		<resource> = float
	}
	economic_category = <economic_category>
}

scripted_modifier = {
	## cardinality = 0..1
	###name of file in gfx\interface\icons\modifiers (without the .dds). Default is "mod_" + key
	icon = icon[gfx/interface/icons/modifiers]
	## cardinality = 0..1
	###show as a % or not (default: no)
	percentage = bool
	## cardinality = 0..1
	###sets the minimum this modifier can be when used as a multiplier in the source code (so probably not relevant since this modifier will not be applied in the source code - but you could theoretically overwrite a code-generated modifier here). Default 0
	min_mult = float
	## cardinality = 0..1
	###default 2
	max_decimals = int
	## cardinality = 0..1
	###sets if it registers as "good" (i.e. a positive number is green, a negative red). Default no.
	good = bool
	## cardinality = 0..1
	###sets if no value is either good or bad (all is yellow). Default no.
	neutral = bool
	## cardinality = 0..1
	###probably hides it in tooltips? Needs testing. Default no.
	hidden = bool
	## cardinality = 0..1
	###Default no
	no_diff = bool
	## cardinality = 0..1
	###Default no
	cap_zero_to_one = bool
	## cardinality = 0..1
	###Default no
	localize_with_value_key = bool
	###sets the modifier category, which is sometimes used to determine whether it is applied to a certain object (so make sure this is set to what you want)
	category = enum[scripted_modifier_categories]
}
