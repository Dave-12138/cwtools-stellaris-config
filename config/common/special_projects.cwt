types = {
	## graph_related_types = { event anomaly_category }
	type[special_project] = {
		name_field = "key"
		path = "game/common/special_projects"

		subtype[cost] = {
			cost = int[1..9999999]
		}
		localisation = {
			name = "$"
			## optional
			desc = "$_DESC"
		}
		images = {
			## optional
			icon = icon # filepath
			## optional
			picture = picture # <sprite>
		}
	}
}


special_project = {
	key = localisation
	## cardinality = 0..1
	cost = int
	## cardinality = 0..1
	cost = {
		alias_name[modifier_rule] = alias_match_left[modifier_rule]
	}
	## cardinality = 0..1
	timelimit = int
	## cardinality = 0..1
	days_to_research = int
	## cardinality = 0..1
	location = bool
	## cardinality = 0..1
	## file_extensions = { .dds .png .tga }
	icon = filepath

	## cardinality = 0..inf
	desc = {
		text = localisation
		trigger = single_alias_right[trigger_clause]
	}

	subtype[cost] = {
		tech_department = enum[tech_department]
	}

	subtype[!cost] = {
		## cardinality = 0..1
		tech_department = enum[tech_department]
	}

	## cardinality = 0..1
	picture =  <sprite>

	event_scope = enum[sp_event_scope]

	## cardinality = 0..1
	event_chain = <event_chain>

	## cardinality = 0..1
	same_option_group_as = {
		## cardinality = 1..100
		<special_project>
	}

	## cardinality = 0..1
	sound = bool

	## cardinality = 0..1
	AI_wait_days = {
		alias_name[modifier_rule] = alias_match_left[modifier_rule]
	}

	## cardinality = 0..1
	requirements = {
		## cardinality = 0..1
		shipclass_military = int
		## cardinality = 0..1
		shipclass_constructor = int
		## cardinality = 0..1
		shipclass_science_ship = int
		## cardinality = 0..1
		shipclass_colonizer = int
		## cardinality = 0..1
		shipclass_transport = int

		## cardinality = 0..1
		leader = enum[leader_class]

		## cardinality = 0..1
		assault_armies = int
		## cardinality = 0..1
		defense_armies = int

		## cardinality = 0..1
		research_station = yes

		## cardinality = 0..1
		mining_station = yes

		## cardinality = 0..1
		observation_station = yes

		## cardinality = 0..1
		skill = int[1..10]

		## cardinality = 0..1
		fleet_power = int

		## cardinality = 0..1
		is_founder_species = bool
		## cardinality = 0..1
		has_trait = <trait.leader_trait>
	}

	## push_scope = country
	## cardinality = 0..1
	### this = country (project owner); from = event scope (planet or ship, MIGHT NOT EXIST); fromfrom = project creation scope (usually equals location)
	abort_trigger = single_alias_right[trigger_clause]

	### this = event scope (ship or planet); from = project creation scope (usually equals location)
	on_success = single_alias_right[effect_clause]

	## cardinality = 0..1
	on_progress_25 = single_alias_right[effect_clause]

	## cardinality = 0..1
	on_progress_50 = single_alias_right[effect_clause]

	## cardinality = 0..1
	on_progress_75 = single_alias_right[effect_clause]

	## cardinality = 0..1
	on_start = single_alias_right[effect_clause]

	## push_scope = country
	## cardinality = 0..1
	### this = country (project owner); from = project creation scope (usually equals location)
	on_fail = single_alias_right[effect_clause]
	## push_scope = country
	## cardinality = 0..1
	### new thing from 2.1.3 patch, have it from?
	on_cancel = single_alias_right[effect_clause]
}


enums = {
	enum[tech_department] = {
		society_technology
		engineering_technology
		physics_technology
	}

	enum[sp_event_scope] = {
		ship_event
		planet_event
		country_event
	}
}
