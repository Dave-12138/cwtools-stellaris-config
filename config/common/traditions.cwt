types = {
	type[tradition] = {
		path = "game/common/traditions"
		localisation = {
			## required
			Name = "$"
			## optional
			Flavor = "$_delayed"
			## optional
			Effects = "$_desc"
		}
		images = {
			## primary
			icon = "gfx/interface/icons/traditions/$.dds" # inferred
		}
	}
	## type_key_filter = tradition_swap
	type[tradition_swap] = {
		base_type = tradition
		path = "game/common/traditions"
		skip_root_key = any
		name_field = name
		subtype[not_inheriting_name] = {
			## cardinality = 0..0
			inherit_name = yes
		}
		subtype[not_inheriting_effects] = {
			## cardinality = 0..0
			inherit_effects = yes
		}
		localisation = {
			subtype[not_inheriting_name] = {
				## required
				Name = "$"
				## optional
				Flavor = "$_delayed"
			}
			subtype[not_inheriting_effects] = {
				## optional
				Effects = "$_desc"
			}
		}
		images = {
			## primary
			icon = "gfx/interface/icons/traditions/$.dds" # inferred
			# TODO inherit icon from parent original tradition if inherit_icon = yes
		}
	}
	## prefix = tradition_
	type[tradition_category] = { #this defines the contents of tradition trees
		path = "game/common/tradition_categories"
		localisation = {
			## required
			Name = "$"
			## required
			Desc = "$_desc"
		}
	}
}

tradition = {
	### accepts only country modifiers
	## cardinality = 0..1
	## replace_scope = { this = country root = country }
	modifier = {
		## cardinality = 0..1
		description = localisation
		## cardinality = 0..1
		description_parameters = {
			### Any value can go here to be used in localisation
			## cardinality = 0..inf
			scalar = scalar
		}
		## cardinality = 0..1
		show_only_custom_tooltip = bool
		## cardinality = 0..1
		custom_tooltip = localisation
		## cardinality = 0..inf
		alias_name[modifier] = alias_match_left[modifier]
	}
	### the ai_weight in traditions applies both to the main traditions and the tradition swaps, there are no seperate fields.
	## replace_scope = { this = country root = country }
	## cardinality = 0..1
	ai_weight = {
		alias_name[modifier_rule] = alias_match_left[modifier_rule]
	}
	## cardinality = 0..1
	## replace_scope = { this = country root = country }
	possible = {
		## cardinality = 0..inf
		alias_name[trigger] = alias_match_left[trigger]
	}
	## cardinality = 0..1
	## replace_scope = { this = country root = country }
	on_enabled = {
		## cardinality = 0..inf
		alias_name[effect] = alias_match_left[effect]
	}
	## cardinality = 0..1
	custom_tooltip = localisation
	## cardinality = 0..1
	custom_tooltip_with_modifiers = localisation

	## cardinality = 0..inf
	tradition_swap = {
		name = localisation
		name = scalar
		## cardinality = 0..1
		inherit_icon = bool
		## cardinality = 0..1
		inherit_name = bool
		## cardinality = 0..1
		inherit_effects = bool
		## cardinality = 0..1
		custom_tooltip = localisation
		## cardinality = 0..1
		custom_tooltip_with_modifiers = localisation

		#Should be only if not inheriting effects
		### accepts only country modifiers
		## cardinality = 0..1
		## replace_scope = { this = country root = country }
		modifier = {
			## cardinality = 0..1
			description = localisation
			## cardinality = 0..1
			description_parameters = {
				### Any value can go here to be used in localisation
				## cardinality = 0..inf
				scalar = scalar
			}
			## cardinality = 0..1
			show_only_custom_tooltip = bool
			## cardinality = 0..1
			custom_tooltip = localisation
			## cardinality = 0..inf
			alias_name[modifier] = alias_match_left[modifier]
		}
		#Should be only if not inheriting effects
		## replace_scope = { this = country root = country }
		## cardinality = 0..1
		on_enabled = {
			## cardinality = 0..inf
			alias_name[effect] = alias_match_left[effect]
		}

		### this determines the chances of a tradition swap appearing for a given empire IF multiple swaps are potential.
		## replace_scope = { this = country root = country }
		## cardinality = 0..1
		weight = {
			alias_name[modifier_rule] = alias_match_left[modifier_rule]
		}
		## cardinality = 0..1
		## replace_scope = { this = country root = country }
		trigger = {
			alias_name[trigger] = alias_match_left[trigger]
		}
	}
}

tradition_category = {
	## cardinality = 0..inf
	desc = {
		trigger = {
			alias_name[trigger] = alias_match_left[trigger]
		}
		text = localisation
	}

	tree_template = scalar

	adoption_bonus = <tradition>
	finish_bonus = <tradition>
	traditions = {
		## cardinality = 1..inf
		<tradition>
	}

	## cardinality = 0..1
	## replace_scope = { this = country root = country }
	potential = {
		## cardinality = 0..inf
		alias_name[trigger] = alias_match_left[trigger]
	}

	## replace_scope = { this = country root = country }
	ai_weight = {
		alias_name[modifier_rule] = alias_match_left[modifier_rule]
	}
}
