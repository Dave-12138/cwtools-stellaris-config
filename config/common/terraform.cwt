types = {
	type[terraform_link] = {
		path = "game/common/terraform"
		file_extension = .txt
	}
}

terraform_link = {
	### country scope, from = planet
	from = <planet_class>
	to = <planet_class>

	## cardinality = 0..inf
	resources = {
		## cardinality = 0..1
		category = <economic_category>
		alias_name[economic_template] = alias_match_left[economic_template]
	}

	duration = int
	## cardinality = 0..1
	### displayed in game, hence functions like after effect and requires localisations in the same way.
	## replace_scopes = { this = country root = country from = planet }
	condition = single_alias_right[trigger_clause]
	## cardinality = 0..1
	## replace_scopes = { this = country root = country from = planet }
	potential = single_alias_right[trigger_clause]
	## cardinality = 0..1
	## replace_scopes = { this = country root = country from = planet }
	effect = single_alias_right[effect_clause]
	## cardinality = 0..1
	## replace_scopes = { this = country root = country from = planet }
	ai_weight = {
		alias_name[modifier_rule] = alias_match_left[modifier_rule]
	}

	## cardinality = 0..1
	## replace_scopes = { this = planet root = planet from = country }
	on_queued = single_alias_right[effect_clause]

	## cardinality = 0..1
	## replace_scopes = { this = planet root = planet from = country }
	on_unqueued = single_alias_right[effect_clause]

}
