types = {
    type[astral_action] = {
        path = "game/common/astral_actions"
        file_extension = .txt
		subtype[uses_custom_cooldown] = {
			uses_custom_cooldown = yes
		}
        localisation = {
            name = "$"
            desc = desc
        }
        images = {
            ## primary
            ## optional
            picture = picture # <sprite>
        }
    }
}

astral_action = {
    sound = <sound_effect>
    ## cardinality = 0..1
    unlock_threshold = int
    ## cardinality = 0..1
    usages = int
    ## cardinality = 0..1
    upgrade = <astral_action>
    ## cardinality = 0..1
    custom_usage_tooltip = localisation

    activation_cost = {
        ## cardinality = 1..inf
        cost = {
            ## cardinality = 0..inf
            <resource> = int
            ## cardinality = 0..inf
            multiplier = int_value_field
            ## cardinality = 0..1
            trigger = single_alias_right[trigger_clause]
        }
    }

    ## cardinality = 0..1
    cooldown = int
    ## default: false
    ## cardinality = 0..1
    uses_custom_cooldown = bool
    picture = <sprite>

    ## cardinality = 0..1
    ## cardinality = 0..1
    ## replace_scopes = { this = country root = country }
    allow_unlock = single_alias_right[trigger_clause]

    ## cardinality = 0..1
    ## replace_scopes = { this = country root = country }
    allow = single_alias_right[trigger_clause]

    ## cardinality = 0..1
    ## replace_scopes = { this = country root = country }
    is_exhausted = single_alias_right[trigger_clause]

    ## cardinality = 0..1
    ## replace_scopes = { this = country root = country }
    potential = single_alias_right[trigger_clause]

    ## cardinality = 0..1
    ## replace_scopes = { this = country root = country }
    effect = single_alias_right[effect_clause]

    ## cardinality = 0..1
    ## replace_scopes = { this = country root = country }
    ai_weight = {
        enum[weight_or_base] = float
        alias_name[modifier_rule] = alias_match_left[modifier_rule]
    }
}