types = {
	type[policy] = {
		path = "game/common/policies"
		file_extension = .txt
		localisation = {
			name = "policy_$"
			desc = "policy_$_desc"
		}
	}
}

policy = {
	## cardinality = 0..1
	potential = single_alias_right[trigger_clause]

	## cardinality = 0..1
	allow = single_alias_right[trigger_clause]

	### Fires when the policy group first becomes available
	## cardinality = 0..1
	on_activate = single_alias_right[effect_clause]

	## cardinality = 2..20
	option = {
		name = localisation
		## cardinality = 0..1
		icon = <sprite>

		## cardinality = 0..inf
		in_breach_of = {
			## cardinality = 0..inf
			{
				## cardinality = 0..1
				## replace_scopes = { this = country root = country }
				trigger = single_alias_right[trigger_clause]
				key = <resolution>
			}
		}

		## cardinality = 0..1
		policy_flags = {
			## cardinality = 0..10
			scalar
		}

		## cardinality = 0..1
		on_enabled = single_alias_right[effect_clause]

		## cardinality = 0..1
		on_disabled = single_alias_right[effect_clause]

		## cardinality = 0..1
		potential = single_alias_right[trigger_clause]

		## cardinality = 0..1
		valid = single_alias_right[trigger_clause]

		## cardinality = 0..1
		## replace_scopes = { this = country root = country }
		modifier = single_alias_right[modifier_clause]

		## cardinality = 0..1
		prerequisites = {
			## cardinality = 0..inf
			<technology>
		}

		## cardinality = 0..1
		AI_weight = {
			alias_name[modifier_rule] = alias_match_left[modifier_rule]
		}
	}
}

enums = {
	complex_enum[policy_option] = {
		path = "game/common/policies"
		name = {
			option = {
				name = enum_name
			}
		}
	}
	complex_enum[policy_flag] = {
		path = "game/common/policies"
		name = {
			option = {
				policy_flags = {
					enum_name
				}
			}
		}
	}
}